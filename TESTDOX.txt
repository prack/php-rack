PHPUnit 3.5.11 by Sebastian Bergmann.

Prack_Builder
 [x] It chains apps by default

Prack_Lint
 [x] It should pass valid request
 [x] It should notice fatal errors
 [x] It should notice environment errors
 [x] It should notice input errors
 [x] It should notice error errors
 [x] It should notice status errors
 [x] It should notice header errors
 [x] It should notice content type errors
 [x] It should notice content length errors
 [x] It should notice body errors
 [x] It should notice input handling errors
 [x] It should notice error handling errors
 [x] It should notice HEAD errors
 [x] It should pass valid read calls

Prack_Lint_InputWrapper
 [x] It should delegate method rewind to the underlying IO object

Prack_Mock_Request
 [x] It should return a Prack Mock Response
 [x] It should be able to only return the environment
 [x] It should provide sensible defaults
 [x] It should allow GET POST PUT DELETE
 [x] It should set content length
 [x] It should allow posting
 [x] It should use all parts of an URL
 [x] It should set SSL port and HTTPS flag on when using https
 [x] It should prepend slash to uri path
 [x] It should properly convert method name to an uppercase string
 [x] It should accept params and build query string for GET requests
 [x] It should accept raw input in params for GET requests
 [x] It should accept params and build url encoded params for POST requests
 [x] It should accept raw input in params for POST requests
 [ ] It should accept params and build multipart encoded params for POST requests
 [x] It should behave valid according to the Rack spec
 [x] It should throw an exception if uri is not a Prack Wrapper String
 [x] It should throw an exception if options is not a Prack Wrapper Hash
 [x] It should throw an exception if rack input is neither Prack Interface Stringable nor Prack Interface ReadableStreamlike

Prack_Mock_Response
 [x] It should provide access to the HTTP status
 [x] It should provide access to the HTTP headers
 [x] It should provide access to the HTTP body
 [x] It should provide access to the Rack errors
 [x] It should optionally make Rack errors fatal
 [x] It should optionally make Rack errors fatal  part 2 
 [x] It should throw an exception when an unknown method is called  on account of delegation
 [x] It should throw an exception if body is neither a Prack Interface Stringable or Prack Interface Enumerable
 [x] It should throw an exception if headers is not a Prack Wrapper Hash

Prack_Request
 [x] It should wrap the rack variables
 [x] It should figure out the correct host
 [x] It should parse the query string
 [x] It should throw an exception if rack input is missing
 [x] It should parse POST data when method is POST and no Content Type given
 [x] It should parse POST data with explicit content type regardless of method
 [x] It should not parse POST data when media type is not form data
 [x] It should parse POST data on PUT when media type is form data
 [x] It should rewind input after parsing POST data
 [x] It should clean up Safari s ajax POST body
 [x] It should get value by key from params with getParam
 [x] It should set value to key on params with setParam
 [x] It should return values for the keys in the order given from valuesAt
 [x] It should extract referrer correctly
 [x] It should alias referer to referrer
 [x] It should extract user agent correctly
 [x] It should cache  but invalidates the cache
 [x] It should figure out if called via XHR
 [x] It should parse cookies
 [x] It should parse cookies according to RFC 2109
 [x] It should provide setters
 [x] It should provide the original env
 [x] It should restore the URL
 [x] It should restore the full path
 [x] It should handle multiple media type parameters
 [x] It should parse Accept Encoding correctly
 [x] It should provide ip information
 [x] It should allow subclass request to be instantiated after parent request
 [x] It should allow parent request to be instantiated after subclass request
 [x] It should not strip escaped character from parameters when accessed as string

Prack_Response
 [x] It should have sensible default values
 [x] It can be written to
 [x] It can set and read headers
 [ ] It can set cookies
 [ ] It can set cookies with the same name for multiple domains
 [ ] It formats the Cookie expiration date accordingly to RFC 2109
 [ ] It can set secure cookies
 [ ] It can set http only cookies
 [ ] It can delete cookies
 [ ] It can delete cookies with the same name from multiple domains
 [x] It can do redirects
 [x] It has a useful constructor
 [x] It has a constructor that can take a callback
 [x] It doesn t return invalid responses
 [x] It knows if it s empty
 [x] It should provide access to the HTTP status
 [x] It should provide access to the HTTP headers
 [x] It does not add or change Content Length within finish
 [x] It updates Content Length when body appended to using write
 [x] It should throw an exception when an unknown method is called  on account of delegation
 [x] It should handle a non standard response body 

Prack_RewindableInput
 [x] It should be creatable without a string
 [x] It should be able to handle read
 [x] It should be able to handle read with null
 [x] It should be able to handle read with length
 [x] It should be able to handle read with length and buffer
 [x] It should be able to handle read with null and buffer
 [x] It should rewind to the beginning when rewind is called
 [x] It should be able to handle gets
 [x] It should be able to handle each
 [x] It should handle really big strings
 [x] It should be possible to call close when no data has been buffered yet
 [x] It should be possible to call close multiple times
 [x] It should not buffer into a Prack Utils IO Tempfile if no data has been read yet
 [x] It should buffer into a Prack Utils IO Tempfile when data has been consumed for the first time
 [x] It should close the underlying tempfile upon calling close

Prack_ShowExceptions
 [x] It catches exceptions

Prack_URLMap
 [x] It dispatches paths correctly
 [x] It dispatches hosts correctly
 [x] It should be nestable
 [x] It should route root apps correctly
 [x] It should not squeeze slashes

Prack_Utils_IO_String
 [x] It should throw an exception if the string is too big
 [x] It should be creatable without a string
 [x] It should be able to handle read
 [x] It should be able to handle read with null
 [x] It should be able to handle read with length
 [x] It should be able to handle read with length and buffer
 [x] It should be able to handle read with null and buffer
 [x] It should rewind to the beginning when rewind is called
 [x] It should be able to handle gets
 [x] It should be able to handle each
 [x] It should throw an exception on each if callback is not callable
 [x] It should handle read on really big strings
 [x] It should handle write
 [x] It should be possible to call close immediately
 [x] It should be possible to call close multiple times

Prack_Utils_Response_HeaderHash
 [x] It should retain header case
 [x] It should check existence of keys case insensitively
 [x] It should merge case insensitively
 [x] It should overwrite case insensitively and assume the new key s case
 [x] It should be converted to real Prack Wrapper Hash
 [x] It should convert values to Prack Wrapper String when converting to Prack Wrapper Hash
 [x] It should replace correctly
 [x] It should be able to delete the given key case sensitively
 [x] It should return the deleted value when delete is called on an existing key
 [x] It should return null when delete is called on a non existant key
 [x] It should avoid unnecessary object creation if possible
 [x] It should create an object with an array otherwise
 [ ] It should distill values when responding to each
 [x] It should alias hasKey and isMember to contains

Prack_Utils
 [x] It should escape correctly
 [x] It should escape correctly for multibyte characters
 [x] It should unescape correctly
 [x] It should parse query strings correctly
 [x] It should parse nested query strings correctly
 [x] It should build query strings correctly
 [x] It should build nested query strings correctly

Prack_Wrapper_Array
 [x] It should handle each
 [x] It should handle set
 [x] It should handle get
 [x] It should return null on get with a negative index that is out of bounds
 [x] It should throw an exception on set with a negative index that is out of bounds
 [x] It should handle push
 [x] It should handle pop
 [x] It should handle unshift
 [x] It should handle shift
 [x] It should output useful information on inspect
 [x] It should know if it s empty

Prack_Wrapper_Hash
 [x] It should handle each
 [x] It should handle set
 [x] It should handle get
 [x] It should know if it s empty

Prack_Wrapper_Set
 [x] It should handle each


Writing code coverage data to XML file, this may take a moment.

Generating code coverage report, this may take a moment.
